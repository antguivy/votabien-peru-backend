services:
  db:
    image: postgres:15-alpine
    container_name: politics_db
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: politics_api
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./migrations:/app/migrations
      - ./alembic.ini:/app/alembic.ini
      - ./database/seed.sql:/app/seed.sql
      - ./entrypoint.sh:/app/entrypoint.sh
    command: sh /app/entrypoint.sh

  adminer:
    image: adminer:latest
    container_name: politics_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - db

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: politics_network