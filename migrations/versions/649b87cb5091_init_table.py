"""init table

Revision ID: 649b87cb5091
Revises:
Create Date: 2025-10-14 10:12:09.647247

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "649b87cb5091"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "distrito",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "nombre", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False
        ),
        sa.Column(
            "codigo", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False
        ),
        sa.Column("es_distrito_nacional", sa.Boolean(), nullable=False),
        sa.Column("num_senadores", sa.Integer(), nullable=False),
        sa.Column("num_diputados", sa.Integer(), nullable=False),
        sa.Column("activo", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("codigo"),
    )
    op.create_index(op.f("ix_distrito_nombre"), "distrito", ["nombre"], unique=True)
    op.create_table(
        "partidopolitico",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "nombre", sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False
        ),
        sa.Column("sigla", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column("logo_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "color_hex", sqlmodel.sql.sqltypes.AutoString(length=7), nullable=True
        ),
        sa.Column("activo", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_partidopolitico_nombre"), "partidopolitico", ["nombre"], unique=True
    )
    op.create_index(
        op.f("ix_partidopolitico_sigla"), "partidopolitico", ["sigla"], unique=False
    )
    op.create_table(
        "persona",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("dni", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column(
            "nombres", sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False
        ),
        sa.Column(
            "apellidos", sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False
        ),
        sa.Column(
            "nombre_completo",
            sqlmodel.sql.sqltypes.AutoString(length=300),
            nullable=False,
        ),
        sa.Column("foto_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_nacimiento", sa.DateTime(), nullable=True),
        sa.Column(
            "profesion", sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True
        ),
        sa.Column("biografia_corta", sa.Text(), nullable=True),
        sa.Column(
            "educacion_superior",
            sqlmodel.sql.sqltypes.AutoString(length=300),
            nullable=True,
        ),
        sa.Column("tiene_antecedentes_penales", sa.Boolean(), nullable=False),
        sa.Column("tiene_antecedentes_judiciales", sa.Boolean(), nullable=False),
        sa.Column("resumen_antecedentes", sa.Text(), nullable=True),
        sa.Column("facebook_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("twitter_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("instagram_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_persona_dni"), "persona", ["dni"], unique=True)
    op.create_index(
        op.f("ix_persona_nombre_completo"), "persona", ["nombre_completo"], unique=False
    )
    op.create_table(
        "procesoelectoral",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "nombre", sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False
        ),
        sa.Column("año", sa.Integer(), nullable=False),
        sa.Column("fecha_elecciones", sa.DateTime(), nullable=False),
        sa.Column("activo", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_procesoelectoral_año"), "procesoelectoral", ["año"], unique=False
    )
    op.create_table(
        "user",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email_verified", sa.DateTime(), nullable=True),
        sa.Column("image", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("password", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "verificationtoken",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "email", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False
        ),
        sa.Column(
            "token", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False
        ),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("token"),
    )
    op.create_table(
        "candidato",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("persona_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "proceso_electoral_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "tipo",
            sa.Enum(
                "PRESIDENTE",
                "VICEPRESIDENTE",
                "SENADOR",
                "DIPUTADO",
                "CONGRESISTA",
                name="tipocandidatura",
            ),
            nullable=False,
        ),
        sa.Column("partido_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("distrito_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("numero_lista", sa.Integer(), nullable=True),
        sa.Column("propuestas", sa.Text(), nullable=True),
        sa.Column(
            "plan_gobierno_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("hoja_vida_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "estado",
            sa.Enum(
                "INSCRITO", "HABIL", "INHABILITADO", "TACADO", name="estadocandidatura"
            ),
            nullable=False,
        ),
        sa.Column("votos_obtenidos", sa.Integer(), nullable=True),
        sa.Column("fue_elegido", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["distrito_id"],
            ["distrito.id"],
        ),
        sa.ForeignKeyConstraint(
            ["partido_id"],
            ["partidopolitico.id"],
        ),
        sa.ForeignKeyConstraint(
            ["persona_id"],
            ["persona.id"],
        ),
        sa.ForeignKeyConstraint(
            ["proceso_electoral_id"],
            ["procesoelectoral.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_candidato_partido_id"), "candidato", ["partido_id"], unique=False
    )
    op.create_index(
        op.f("ix_candidato_persona_id"), "candidato", ["persona_id"], unique=False
    )
    op.create_index(
        op.f("ix_candidato_proceso_electoral_id"),
        "candidato",
        ["proceso_electoral_id"],
        unique=False,
    )
    op.create_index(op.f("ix_candidato_tipo"), "candidato", ["tipo"], unique=False)
    op.create_table(
        "legislador",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("persona_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("partido_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("distrito_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "camara",
            sa.Enum("CONGRESO", "SENADO", "DIPUTADOS", name="tipocamara"),
            nullable=False,
        ),
        sa.Column("periodo_inicio", sa.DateTime(), nullable=False),
        sa.Column("periodo_fin", sa.DateTime(), nullable=False),
        sa.Column("esta_activo", sa.Boolean(), nullable=False),
        sa.Column(
            "email_congreso",
            sqlmodel.sql.sqltypes.AutoString(length=255),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["distrito_id"],
            ["distrito.id"],
        ),
        sa.ForeignKeyConstraint(
            ["partido_id"],
            ["partidopolitico.id"],
        ),
        sa.ForeignKeyConstraint(
            ["persona_id"],
            ["persona.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_legislador_distrito_id"), "legislador", ["distrito_id"], unique=False
    )
    op.create_index(
        op.f("ix_legislador_partido_id"), "legislador", ["partido_id"], unique=False
    )
    op.create_index(
        op.f("ix_legislador_persona_id"), "legislador", ["persona_id"], unique=False
    )
    op.create_table(
        "usertoken",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "access_key", sqlmodel.sql.sqltypes.AutoString(length=250), nullable=True
        ),
        sa.Column(
            "refresh_key", sqlmodel.sql.sqltypes.AutoString(length=250), nullable=True
        ),
        sa.Column(
            "ip_address", sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True
        ),
        sa.Column(
            "user_agent", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("last_used_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_usertoken_access_key"), "usertoken", ["access_key"], unique=False
    )
    op.create_index(
        op.f("ix_usertoken_refresh_key"), "usertoken", ["refresh_key"], unique=False
    )
    op.create_table(
        "asistencia",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("legislador_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("fecha", sa.DateTime(), nullable=False),
        sa.Column("tipo_sesion", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("asistio", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["legislador_id"],
            ["legislador.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_asistencia_fecha"), "asistencia", ["fecha"], unique=False)
    op.create_index(
        op.f("ix_asistencia_legislador_id"),
        "asistencia",
        ["legislador_id"],
        unique=False,
    )
    op.create_table(
        "denuncia",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("legislador_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "titulo", sqlmodel.sql.sqltypes.AutoString(length=300), nullable=False
        ),
        sa.Column("descripcion", sa.Text(), nullable=True),
        sa.Column("tipo", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column("fecha_denuncia", sa.DateTime(), nullable=False),
        sa.Column("estado", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("resolucion", sa.Text(), nullable=True),
        sa.Column("url_documento", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["legislador_id"],
            ["legislador.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_denuncia_legislador_id"), "denuncia", ["legislador_id"], unique=False
    )
    op.create_table(
        "proyectoley",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("legislador_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "numero", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column(
            "titulo", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False
        ),
        sa.Column("resumen", sa.Text(), nullable=True),
        sa.Column("fecha_presentacion", sa.DateTime(), nullable=False),
        sa.Column(
            "estado", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False
        ),
        sa.Column("url_documento", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["legislador_id"],
            ["legislador.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_proyectoley_legislador_id"),
        "proyectoley",
        ["legislador_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_proyectoley_numero"), "proyectoley", ["numero"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_proyectoley_numero"), table_name="proyectoley")
    op.drop_index(op.f("ix_proyectoley_legislador_id"), table_name="proyectoley")
    op.drop_table("proyectoley")
    op.drop_index(op.f("ix_denuncia_legislador_id"), table_name="denuncia")
    op.drop_table("denuncia")
    op.drop_index(op.f("ix_asistencia_legislador_id"), table_name="asistencia")
    op.drop_index(op.f("ix_asistencia_fecha"), table_name="asistencia")
    op.drop_table("asistencia")
    op.drop_index(op.f("ix_usertoken_refresh_key"), table_name="usertoken")
    op.drop_index(op.f("ix_usertoken_access_key"), table_name="usertoken")
    op.drop_table("usertoken")
    op.drop_index(op.f("ix_legislador_persona_id"), table_name="legislador")
    op.drop_index(op.f("ix_legislador_partido_id"), table_name="legislador")
    op.drop_index(op.f("ix_legislador_distrito_id"), table_name="legislador")
    op.drop_table("legislador")
    op.drop_index(op.f("ix_candidato_tipo"), table_name="candidato")
    op.drop_index(op.f("ix_candidato_proceso_electoral_id"), table_name="candidato")
    op.drop_index(op.f("ix_candidato_persona_id"), table_name="candidato")
    op.drop_index(op.f("ix_candidato_partido_id"), table_name="candidato")
    op.drop_table("candidato")
    op.drop_table("verificationtoken")
    op.drop_table("user")
    op.drop_index(op.f("ix_procesoelectoral_año"), table_name="procesoelectoral")
    op.drop_table("procesoelectoral")
    op.drop_index(op.f("ix_persona_nombre_completo"), table_name="persona")
    op.drop_index(op.f("ix_persona_dni"), table_name="persona")
    op.drop_table("persona")
    op.drop_index(op.f("ix_partidopolitico_sigla"), table_name="partidopolitico")
    op.drop_index(op.f("ix_partidopolitico_nombre"), table_name="partidopolitico")
    op.drop_table("partidopolitico")
    op.drop_index(op.f("ix_distrito_nombre"), table_name="distrito")
    op.drop_table("distrito")
    # ### end Alembic commands ###
